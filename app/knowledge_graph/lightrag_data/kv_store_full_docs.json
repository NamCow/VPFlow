{
  "vpflow_softai_doc": {
    "content": "# VPBank Technology Hackathon 2025\n\n## Nội dung văn bản (Paragraph)\n\nVPBank® powered by aws\n\nVPBank Technology Hackathon 2025\n\nGeneral Brief\n\nPlease fill up this table and use this document as a template to write our proposal.\n\nHack Challenge 4: Al-Powered Banking Process Redesign Challenge Statement\n\nNhóm 247 (Update to SoftAI) Team Name\n\nTeam Members\n\nSchool Name Full Name Profile Role Faculty / Area Linkedln Email Address\n\nof Study (if applicable) URL\n\nNguyên Information of Science, Vãn University https://www.linkedin.com/i nvantu2305@gmail. Team lead\n\n+ AI dev Tú VNUHCM Technology n/nguyen-van-tu/ com\n\nof Information University Backend + Science, https://www.linkedin.com/i Trung Duong trungnghia.24904@\n\nTechnology VNUHCM Nghîa AI dev n/nghia-zun/ gmail.com\n\nhttps://www.linkedin.com/i of Science, University Information Frontend Thành Pham ptnhanit230104@g\n\nVNUHCM Nhân mail.com Technology developer n/nhan-pham-53a891323/\n\nLu'o'ng Xuân https://www.linkedin.com/i Information of Science, University DevOps + Ixthanh235@gmail.c\n\nTechnology VNUHCM Architecture n/luongthanh/ Thanh om\n\nSolution\n\nDinh Nguyên DA + BA https://www.linkedin.com/i University of Economics and anhdnl22@uef.edu. Financial\n\nTechnology Finance Lan Anh n/ddnlanh/ vn\n\nPage 1 of 25\n\nVPBank®\n\nContent Outline\n\nSection Page No.\n\nAddition Resources 3\n\nSolutions Introduction 4\n\nImpact of Solution 6\n\nDeep Dive into Solution 11\n\nArchitecture of Solution 23\n\nPage 2 of 25\n\nVPBank®\n\nAddition Resources\n\n[1]. VPFlow - Figma prototype demonstratation video: https://youtu.be/hY JsGxNuel\n\nHighly recommend watch after read the Solutions Introduction section\n\n[2]. VPFlow - Figma: VPFlow Figma Link\n\nPage 3 of 25\n\nVPBank®\n\nSolutions Introduction\n\nWhat is VPFlow?\n\nVPFlow is an Al-powered, centralized platform built to help banks - especially in complex operational\n\nenvironments like VPBank - to comprehend, visualize, optimize, and continuously improve internal\n\nworkflows. Instead of static flowcharts and disconnected SOP files, VPFlow turns our internal processes\n\ninto interactive, intelligent diagrams, which we call Dynamic Swimlane diagram (footnote).\n\nPowered by Generative AI, LLMs, Knowledge-augmented generation and AWS infrastructure,\n\nVPFlow bridges the gap between traditional operations and intelligent automation.\n\nWhat makes VPFlow different?\n\nFrom SOPs to diagrams: VPFlow auto-generates swimlane diagrams from unstructured\n\ndocuments, SOPs, and process narratives using fine-tuned LLMs (e.g., Deekseek R1).\n\nReal-time interaction: Each diagram node is clickable and explorable. Users can ask questions\n\nabout each step and receive natural language explanations via AI agent.\n\nInteractive agent tools that enable users to engage directly with workflows via an intuitive\n\ngraphical user interface\n\nBottleneck detection & AI suggestions: System identifies pain points based on user feedback,\n\ntime metadata, and process logic. GenAl offers improvement recommendations instantly.\n\nKnowledge-rich database: By integrating knowledge graphs with vector embeddings, the\n\nplatform constructs a dynamic, LLM-ready context layer - enabling deep understanding of each\n\nworkflow component.\n\nPowered by AWS: With AWS Textract, SageMaker, Lambda, Neptune and more, VPFlow\n\nensures enterprise-grade scalability, reliability, and cost-efficiency.\n\nVPFlow offers a comprehensive experience for both new and experienced banking professionals,\n\nstreamlining complex operational processes into accessible visual models.\n\nThe platform leverages Large Language Models (LLMs) - such as a fine-tuned version of Deekseek\n\nR1 for diagram generation-and combines knowledge graphs with vector embeddings to build an LLM-\n\nfriendly, context-rich database.\n\nMeanwhile, AWS services power the system's intelligence, scalability, and adaptability, making\n\nVPFlow a truly enterprise-grade solution for process intelligence.\n\nOur Mission: To provide a dynamic and interactive platform that makes the integration of Al\n\ntechnologies-such as Large Language Models, knowledge graphs, and process mining-seamless and\n\nPage 4 of 25\n\nVPBank®\n\naccessible for banks. VPFlow empowers institutions to transform static operational knowledge into living,\n\nvisual workflows that evolve through automation, collaboration, and continuous improvement.\n\nBankers: to navigate complex internal processes visually, ask questions in plain language, and\n\npropose improvements.\n\nExperts/Process Owners: to receive user feedback, simulate changes, and continuously\n\noptimize operations - faster, smarter, and with full visibility.\n\nWhy AWS Services?\n\nAWS is not just infrastructure - it's the intelligence backbone of VPFlow\n\nVPFlow leverages AWS not merely for hosting, but as a modular engine that powers the platform's\n\nscalability, real-time capability, and enterprise readiness:\n\nServerless & real-time: AWS Lambda and EventBridge handle SOP ingestion, diagram\n\ngeneration, and user interaction in real time - without infrastructure overhead.\n\nAI model orchestration: SageMaker and Bedrock power the extraction of workflows from\n\nunstructured documents, bottleneck detection, and contextual responses using LLMs.\n\nSemantic workflow intelligence: Amazon Neptune fuses graph relationships and vector\n\nembeddings to enable business-aware search and logic validation across processes.\n\nContinuous learning: User feedback feeds into SageMaker's reinforcement learning loop,\n\nallowing the system to adapt and improve optimization suggestions over time.\n\nSecure and compliant: IAM, KMS, and CloudTrail ensure strict access control, encryption, and\n\nauditability - essential for financial-grade compliance.\n\nFlexible integration: Services like S3, DynamoDB, and DataSync support hybrid deployments\n\nand easy integration with core banking systems.\n\nIn short, AWS allows VPFlow to scale intelligently, respond instantly, learn continuously, and comply\n\nrigorously - meeting both technical and regulatory demands of modern banks.\n\nFor Better Comprehend, please watch the demonstration:\n\nhttps://youtu.be/hY JsGxNuel\n\nPage 5 of 25\n\nVPBank®\n\nImpact of Solution\n\nHow does our solution benefit the society / the target audience? We are not merely building a tool - we are creating a \"second brain\" for the bank.\n\n1. Redefining Internal Operational Capabilities in Modern Banking Our solution is not just a diagramming platform, but rather an Operating System for Workflow Intelligence - a centralized system that enables banks to comprehend, monitor, optimize, and continuously automate their internal processes. From a raw SOP file, the system automatically: Extracts and visualizes the process in a swimlane format, identifying roles, conditions, and business flows. Integrates Generative AI to analyze logic, detect bottlenecks, simulate what-if scenarios, and measure operational impacts. Transforms each process step into a dynamic interaction point, where employees can click to read, inquire, give feedback, or suggest improvements. As a result, the entire operation becomes transparent, measurable, learnable, and continuously improvable - surpassing traditional Business Process Management (BPM) systems.\n\n2. High Practical Relevance: Addressing Real-World Bottlenecks Identified in the Field This solution was developed through extensive field interviews and direct observations at banks such as ACB, VPBank, and Techcombank - where we identified pressing challenges such as: Fragmented processes without metadata or version control, leading to time-consuming information retrieval. Delays in CIC (Credit Information Center) approvals due to opaque, manual underwriting flows and logic errors. Unsynchronized CRM data, resulting in misrouted or unprocessed requests. Lack of a systematic feedback loop, rendering processes \"frozen\" and disconnected from operational reality. Our system addresses these issues at the root by converting operational knowledge into live, queryable data, eliminating dependence on static documents or manual meetings.\n\n3. Laying the Foundation for Al-Driven Digital Banking Our solution is not only designed for current operations but also serves as an infrastructure for the future of digital banking, enabling: Neo-banking capabilities, where each process step can self-analyze, flag anomalies, and support FinTech onboarding, identity verification, and anti-fraud operations. Live compliance monitoring systems, capable of real-time process control and auto-generating audit logs. RPA 2.0, where repetitive tasks are automatically identified and proposed for automation without the need for coding. The entire system is built on an AWS cloud-native stack, including: Bedrock/SageMaker: for diagram generation, semantic analysis, and process-related Q&A. Neptune/DynamoDB: for storing workflow diagrams as analyzable graphs. Textract + S3: for parsing input SOP documents. Lambda + API Gateway: a flexible serverless architecture ensuring fast responses and high security. This architecture ensures full scalability across the bank without disrupting existing systems, and seamless integration with core internal platforms (CRM, DMS, Core Banking, eKYC, ticketing, etc.).\n\nPage 6 of 25\n\nVPBank®\n\n4. Social Impact - Enhancing Efficiency Across the Financial Sector At the societal level, the system brings about: A more transparent and equitable work environment for bank employees. Reduced processing time for customer services, especially in lending, identification, and account opening. A cost-efficient digital transformation platform for small and mid-sized banks in Vietnam. In summary: This is not merely a technical solution but a strategic enabler that supports the Vietnamese banking sector in transitioning to an intelligent, adaptive, and continuously optimized operating model.\n\nWhy our solution is a good solution? How is it better than existing solutions in the market / competitors?\n\nBecause it goes beyond the limitations of current tools and lays the foundation for intelligent banking operations.\n\n1. Aligned with the Practical Needs of the Vietnamese Banking Sector Based on field surveys and interviews with operational staff at major Vietnamese banks such as ACB, Techcombank, and VPBank, our research identified several systemic challenges: Business processes (SOPs, guidelines, forms) are scattered across departments, lacking centralization and metadata, resulting in difficulties in retrieval and consistency maintenance. Employees have limited visibility into the relationships between process steps and lack intuitive tools to understand roles and workflows holistically. Operational bottlenecks (e.g., delayed CIC checks, internal handovers, CRM input errors) are not systematically tracked or proactively flagged. Process updates and improvement proposals are typically manual and lack tools for simulation or performance assessment prior to implementation. These issues cannot be effectively addressed using existing tools such as Microsoft Visio, Lucidchart, or traditional BPMN systems, which mainly provide static diagramming capabilities and lack business logic comprehension or advanced analytical features.\n\n2. Existing Tools are \"Isolated\" - Our Solution is an \"Ecosystem\" Most existing solutions in the market (Lucidchart, Visio, Signavio, etc.) are standalone diagramming tools designed primarily for presentation or static business flow design. They lack business context understanding, real-time data integration, continuous improvement support, and adaptability to the complex banking environment. In contrast, our solution: Understands the semantics of SOPs and disparate documents to auto-generate process diagrams. Links process steps with real-time data, metadata, and business roles. Enables users to interact, give feedback, and suggest improvements directly on the diagram interface. Integrates seamlessly into existing bank ecosystems (CRM, Core Banking, eKYC, etc.).\n\n3. Core Technological and Functional Differentiation Our solution leverages Generative AI (GenAl) to analyze SOPs, operational guidelines, and user feedback to: Auto-generate swimlane process diagrams instead of relying on manual diagramming. Detect logical errors such as missing handlers, infinite loops, or ambiguous conditions.\n\nPage 7 of 25\n\nVPBank®\n\nRecommend process improvements at bottlenecks using metadata such as time delays, wait steps, or user feedback. Simulate the impact of process changes (e.g., merging steps, changing handlers, altering approval conditions) before deployment. Incorporate frontline feedback into each process step to enable continuous process optimization. These features are not fully integrated or user-friendly in current market tools - especially under the decentralized operations and domain-specific requirements of the Vietnamese banking industry.\n\n4. Positioned as a \"Smart Control Layer\" Spanning the Entire Organization Rather than replacing existing systems, we introduce a new control layer that: Empowers any employee to search, understand, and improve active processes. Reuses operational data to auto-generate training materials, suggest automation, or flag process errors. Converts the entire business workflow into a living graph, enabling leadership to visualize bottlenecks, access controls, and illogical flows - all in real time.\n\n5. Comparative Assessment with Market Alternatives\n\nMicrosoft Visio / Proposed Method SAP Signavio / Bizagi Evaluation Criteria Lucidchart\n\nAuto-generation of process Yes, with advanced No Yes, using GenAl diagrams from SOP text configuration\n\nLogic error detection in process Al-powered Yes, No No flows warnings\n\nImprovement suggestions based Yes, using AI and staff Partial (via expert analysis) No feedback on internal data\n\nsimplified What-if simulation of process Yes, but complex and hard for Yes, No changes business users to access\n\nAttachment of documents at Yes, flexible Manual only, not with Yes, in enterprise platforms file/metadata linking standardized each process step\n\nYes, field-tested and Suitability for Vietnamese Yes, but expensive and No lightweight banking operations complex to deploy\n\n6. Full Leverage of AWS Capabilities to Realize the Solution We utilize AWS services not just for technical support, but as strategic components in our solution architecture: Textract: Automatically reads and extracts logic with from original SOP documents, minimizing manual input. Bedrock / SageMaker: Powers GenAl core functionalities such as diagram generation, logic analysis, and conversational interfaces. DynamoDB / Neptune: Builds process graph structures for bottleneck detection and scenario simulation.\n\nPage 8 of 25\n\nVPBank®\n\nLambda + API Gateway: Implements a serverless architecture for cost efficiency, instant scalability, and secure integration with internal systems. We do not simply \"use AWS\" - we architect the solution around AWS's infrastructure strengths, enabling performance, scalability, and ease of integration.\n\nOur solution's competitive advantage / unique selling point?\n\nA \"living command center\" for banks - where processes are not only visualized, but also learned, improved, and self-adaptive.\n\nOur solution offers a unique combination of business process comprehension via GenAl, interactive swimlane visualization, and continuous process optimization, specifically tailored to the operational context of Vietnamese banks. While existing platforms (e.g., Lucidchart, Signavio, Camunda) primarily focus on diagramming or high-level BPM modeling, our solution distinguishes itself in several critical areas:\n\n1. Auto-generation of Process Maps from Unstructured Text - No Drawing or Configuration Required Current tools like Visio, Lucidchart, or Camunda require users to have domain knowledge and manually draw process diagrams. This is time-consuming, not scalable across staff, and prone to inconsistencies. Our solution: Takes input as SOPs, internal guidelines, or PDF documents. Uses GenAl to automatically identify roles, flows, conditions, and related documentation. Generates interactive swimlane diagrams - transforming static documents into living data. This reduces process mapping time by up to 80% and democratizes process understanding for non- technical staff.\n\n2. Al-Powered Logic Analysis and Process Performance Optimization Unlike current static diagrams, our system enables: Clicking each step to view the responsible party, associated documents, and input/output conditions. Interacting at each process point - users can access documents or directly ask questions via AI assistant. Capturing in-process feedback from frontline staff - no more scattered suggestions lost in email threads. As a result, the process map becomes a smart operational blueprint that can learn and self-improve over time.\n\n3. Step-Level Feedback Integration and Logic-Driven Optimization We train GenAl not just to read SOPs, but to understand business logic, enabling: Logic validation - detecting design flaws (e.g., missing handlers, infinite loops). Bottleneck detection based on metadata, time duration, and user interactions. Improvement suggestions such as step merging, role consolidation, or automation opportunities. This promotes continuous, practical, and staff-driven process optimization.\n\n4. What-if Simulation - Model Process Changes Before Deployment\n\nWe integrate simulation capabilities to:\n\nPage 9 of 25\n\nVPBank®\n\nquantify time savings. Merge steps Remove approval layers assess associated risk increases. Shift tasks to RPA estimate ROI of automation.\n\nEach change is quantified and validated before implementation, enabling data-driven decisions rather than intuition-based ones.\n\n5. Built for Banking - Scalable to Any Process-Driven Organization Our features are designed specifically for banking use cases, including: Credit underwriting eKYC and CRM workflows Customer complaints and account opening However, the platform is fully extensible to: Insurance (claims, verification) FinTech (onboarding, fraud detection) Large enterprises (HR workflows, internal control) This is more than a product - it's a \"process graph + GenAl + feedback loop\" platform for any organization seeking efficient, transparent, and adaptive operations. In summary: Our solution is not merely a process visualization tool - it is an intelligent, banking-\n\nspecialized platform that connects operations, compliance, and technology into a cohesive ecosystem\n\nthat is easy to deploy, scalable across\n\nPage 10 of 25\n\nVPBank®\n\nDeep Dive into Solution\n\nAgent toolkit (Chatbot, Node V&A, Dynamic Swimlane Suggestion, etc.)\n\nCall\n\nRender Workflow Reposity Sematic search Database (search for availle workflows)\n\nModified Textract Document Store Link Save Database [=] Detection & Highlight\n\nDocument or WorkflowJSON Banker Extract Upload Parse Description\n\nPain Points Inherit\n\nCrowd-vote for fine-tuning LLM\n\nExpert Feedback Database Feedback Store Write\n\nImage 1: VPFlow - High Level Data Flow Diagram\n\nEPIC 1 - Workflow Management This EPIC aims to provide bankers with the ability to upload, extract, and manage workflow processes\n\nfrom multiple document formats (e.g., SOPs, DOCX, PDF), while supporting version control over time.\n\nAdditionally, it enables advanced multilingual search to retrieve workflows based on keywords or\n\nbusiness context.\n\n1.1 Upload / Search Workflow\n\nPurpose: Users can upload a new workflow document or search existing workflows using business-\n\nrelated keywords in natural language across multiple languages.\n\nKey Capabilities: Supports semantic keyword search using vector embeddings (e.g., pgvector,\n\nFAISS), allowing for free-text input with multilingual normalization, including diacritic removal, slang\n\nPage 11 of 25\n\nVPBank®\n\ncorrection, and typo tolerance. Each workflow stores rich metadata, such as process title, actors,\n\ndepartment, frequency, and objective. Results can be filtered by tags like department, role, or last\n\nmodified date.\n\nArchitecture:\n\nText is embedded using a multilingual language model (BGE-M3), if Vietnamese detected\n\nViDense will be used for State-of-the-art performance.\n\nIndexing engine supports both full-text and semantic queries.\n\nOptional tag-based filtering by department, role, or last modified date.\n\nOutput: Delivers a ranked list of relevant workflows, with options to preview summaries or open full\n\nvisualizations (linked to EPIC 2.1).\n\n1.2 Parse SOP / PDF / DOCX\n\nPurpose: Users can upload standard operating procedure documents in unstructured formats (PDF,\n\nDOCX, etc.), and the system will automatically extract a structured JSON representation of the workflow,\n\nincluding: Steps, Actors, Dependencies, Conditional logic (if/else, approval, exception handling)\n\nKey Capabilities:\n\nThe parsing process leverages a multi-stage GenAl pipeline that includes:\n\nOCR for scanned documents,\n\nLayout-aware parsing to detect tables, forms, or flows,\n\nAnd LLM-based entity extraction to identify multilingual elements such as steps, actors,\n\nconditions, and references.\n\nThe final output is a visualization-compatible JSON, ready for confirmation and editing before\n\nrendering.\n\nArchitecture:\n\nChunking Document Preprocessing Prompt-based multilingual extraction Post-\n\nJSON schema validation. processing\n\nUses prompt templates trained on domain-specific language (e.g., enterprise SOPs, regulatory\n\ndocuments across supported languages).\n\nOutput: A structured, editable JSON file representing the workflow, with the option to review and\n\nconfirm before visualization.\n\n1.3 Version Control & History\n\nPage 12 of 25\n\nVPBank®\n\nPurpose: Enables comprehensive version management for workflows-users can track changes,\n\nrestore previous versions, or compare edits over time with full traceability.\n\nKey Capabilities: Each workflow change auto-generates a version ID, and a Git-like diff engine\n\nhighlights differences in diagram structure. Annotations can include who made changes, when, and why\n\n(if enabled via comments).\n\nArchitecture:\n\nWorkflows stored in JSON format with hashed version IDs.\n\nDelta storage or full snapshot depending on change granularity.\n\nTimeline UI to navigate and visualize previous versions.\n\nOutput: An intuitive version timeline panel, with tools to compare, revert, or audit changes,\n\nsupporting full accountability and rollback functionality.\n\nEPIC 2 - Workflow Visualization This EPIC provides an interactive, user-friendly interface to visualize, interact with, and analyze business\n\nworkflows. The focus is on clarity (via swimlanes), interactivity (node insights), and optimization (pain\n\npoint detection).\n\n2.1 Interactive Diagram (Swimlane)\n\nPurpose: Renders each workflow as an interactive swimlane diagram, organizing tasks by actors/roles\n\n(e.g., customer, staff, supervisor).\n\nKey Capabilities: Diagram engine (e.g., Mermaid.js, D3.js, or custom Canvas) supports:\n\nLane separation by actor\n\nSequential and parallel flows\n\nGateways (if/else)\n\nReal-time updates when workflow JSON is modified.\n\nArchitecture: JSON Renderer engine (Mermaid parser or D3-based DSL). AST\n\nDiagram components are clickable (linked to EPIC 2.2).\n\nOutput: A responsive swimlane diagram with visual actor separation and structural clarity, ready for\n\nanalysis and interaction.\n\n2.2 Clickable Node\n\nPurpose: Each task or node in the diagram is interactive. Clicking on it reveals:\n\nResponsible actor(s): Example Page 13 of 25\n\nVPBank®\n\nEstimated duration\n\nLinked forms or files\n\nSLA (Service Level Agreement), deadlines, notes\n\nKey Capabilities:\n\nTooltip + side panel on click.\n\nRich metadata display from workflow JSON.\n\nSupport for role-based access (e.g., editors see edit button, viewers see only details).\n\nArchitecture: Node registry with event listeners. Contextual panel rendered on click.\n\nOutput: A dynamic side panel showing detailed task metadata, with navigation support between\n\nconnected steps.\n\n2.3 Highlight Pain Points\n\nPurpose: Automatically scans the workflow and highlights pain points, which are steps that:\n\nTake excessive time.\n\nInvolve multiple handoffs or actors.\n\nFrequently cause delays, confusion, or rework.\n\nKey Capabilities: Pain point scoring algorithm:\n\nStep duration x number of dependencies x actor transitions\n\nOptionally incorporates execution logs or heuristics\n\nVisual cue (e.g., red outline or glow) on affected node(s)\n\nArchitecture: Pain scores are computed in a preprocessing stage and visualized using threshold-based\n\ncolor cues (e.g., red glow, warning icons).\n\nOutput: An annotated diagram highlighting pain points. Hovering over a node reveals a quick explanation\n\nand score.\n\n2.4 Pain Point Explanation\n\nPurpose: AI explains why a step is marked as a pain point and optionally suggests ways to improve it.\n\nKey Capabilities: Uses LLM with custom prompt template:\n\n\"Explain why this step is problematic.\"\n\n\"Why is this handoff causing issues?\"\n\n\"How can we improve this part of the process?\"\n\nMay reference prior logs or organizational KPIs if available.\n\nPage 14 of 25\n\nVPBank®\n\nArchitecture: Node metadata and flow context are sent to a templated prompt, and results are rendered\n\ninline via tooltip or collapsible panel.\n\nOutput:\n\nNatural language explanation (e.g., \"This step involves 3 departments and lacks automation\").\n\nOptional links to AI suggestions (integrated with EPIC 3.4).\n\nEPIC 3 — GenAl-powered Analysis & Assistant This EPIC leverages Generative AI to analyze workflows at multiple levels - from high-level\n\nassessments to step-specific insights - enabling users to understand, validate, and improve complex\n\nprocesses through natural language interaction.\n\n3.1 Global AI Assistant\n\nPurpose: Empowers users to ask high-level, natural-language questions about the entire workflow\n\ndiagram - such as \"Which step is the most complex?\", \"What documents or forms are needed?\", or \"Is\n\nthis process logical and efficient?\"\n\nKey Capabilities:\n\nConverts swimlane structure into a knowledge graph (actors, steps, dependencies)\n\nUses LLM + RAG (Retrieval-Augmented Generation) to ground answers in business metadata,\n\nrules, and past executions\n\nProvides answers in natural language with optional highlights or summaries\n\nArchitecture:\n\nKnowledge Graph (nodes, actors, relations) Swimlane JSON\n\nPrompt Generator with injected metadata Query Parser\n\nLLM synthesis (e.g., GPT-4, Claude) RAG pipeline: vector search on past data\n\nFrontend shows annotated results with highlight overlays\n\nOutput: Users receive actionable insights across the entire workflow, often with clickable suggestions or\n\nlinks to deeper drill-downs.\n\n3.2 Node-Level Q&A\n\nPurpose: Users can select a specific step (node) and ask targeted questions about that task's context,\n\nand responsibilities. conditions,\n\nExamples:\n\n\"What triggers this task?\" Page 15 of 25\n\nVPBank®\n\n\"Who is responsible here?\"\n\n\"What risks are associated with this step?\"\n\nKey Capabilities: Generates dynamic prompts based on the selected node's metadata - including\n\nconnected steps, roles, conditions, and historical execution data. Answers are focused and informative.\n\nArchitecture:\n\nNode selection triggers metadata extraction (actor, conditions, in/out edges)\n\nPrompt template filled dynamically with node-local context\n\nOptional RAG augmentation using internal process logs\n\nUI renders answers in a collapsible side panel\n\nOutput: Clear, targeted responses related to the chosen step, with options to explore deeper or simulate\n\nchanges.\n\n3.3 Smart Error Detection\n\nPurpose: The system automatically scans the diagram to identify structural or logical issues, such as:\n\nTasks without assigned actors\n\nGateways missing conditions\n\nInfinite or invalid loops\n\nDisconnected or redundant nodes\n\nKey Capabilities: Converts workflows into DAGs (Directed Acyclic Graphs) for rule-based static analysis.\n\nUses LLM to explain detected issues in plain, accessible language and marks them visually.\n\nArchitecture:\n\nWorkflow JSON DAG conversion\n\nRule engine checks for graph violations and anti-patterns\n\nFindings passed through explanation prompt LLM output\n\nFrontend highlights faulty nodes with tooltips and fix suggestions\n\nOutput: Combined visual/textual error reports, with friendly explanations and fix recommendations.\n\nAdmins can preview or auto-apply corrections.\n\n3.4 Suggest redesign\n\nPurpose: The AI recommends structural improvements to optimize efficiency - for instance by merging\n\nredundant steps, parallelizing independent paths, or balancing workloads across actors.\n\nPage 16 of 25\n\nVPBank®\n\nKey Capabilities:\n\nApplies transformation rules (e.g., merge sequential tasks, parallelize paths, balance workload)\n\nLeverages logs and organizational best practices\n\nUses LLM to explain before/after changes\n\nArchitecture:\n\nBaseline workflow JSON transformation engine applies optimizations\n\nComparison module parses ASTs of both versions\n\nPrompts generated to summarize improvements and trade-offs\n\nFrontend shows side-by-side diagrams + natural language summary\n\nOutput: An improved version of the workflow, complete with AI commentary, visual diff view, and the\n\nability to accept, reject, or edit proposed changes.\n\nEPIC 4 - Simulation & Optimization This EPIC enables interactive simulation of process modifications and data-driven optimization.\n\nUsers can run what-if scenarios, evaluate risks, and compare process versions based on time, cost,\n\nresource efficiency, and compliance.\n\n4.1 What-if Simulation\n\nPurpose: Enables users to simulate hypothetical edits to the workflow - such as removing a step,\n\nreassigning responsibilities, adding delays, or introducing automation - and immediately observe\n\ndownstream effects.\n\nKey Capabilities: Each simulation estimates how proposed changes affect overall process performance:\n\nincluding total execution time, actor workload distribution, and potential logic issues or risk exposure. The\n\nsystem presents results in intuitive graphs and summaries.\n\nArchitecture:\n\nConverts dynamic swimlane into an executable simulation graph with annotations for time, cost,\n\nand resources.\n\nUses probabilistic simulations (e.g., Monte Carlo) or rule-based logic propagation to model the\n\noutcome of edits.\n\nResults are cached and visualized in real-time.\n\nOutput: Users receive dynamic charts and summaries quantifying changes in KPIs, such as \"+2 hours,\n\n-1 actor, risk increased at gateway X\". Multiple simulation scenarios can be toggled for comparison.\n\nPage 17 of 25\n\nVPBank®\n\n4.2 Compare Flows (Before vs. After)\n\nPurpose: After a simulation or Al-driven redesign, the system compares two process versions side-by-\n\nside:\n\nStructural differences (nodes, branches, loops).\n\nKPI metrics (time, task count, complexity, actor distribution).\n\nAI verdict: is the new version better? Why?\n\nKey Capabilities: The comparison highlights structural differences (nodes added/removed, logic\n\nbranches changed), along with metrics like task duration, actor complexity, and workload balance. AI\n\nevaluates whether the redesigned version is more optimal and explains why.\n\nArchitecture:\n\nParses two dynamic swimlane versions into abstract syntax trees (ASTs).\n\nCompares control flow, actor involvement, and estimated metrics.\n\nAI uses prompt templates to summarize deltas and justify conclusions.\n\nOutput: An interactive diff view with color-coded diagram changes, a breakdown of metric deltas in tables,\n\nand an Al-generated explanation stating whether - and why - the new process is better.\n\n4.3 AI Justification / Risk Analysis\n\nPurpose: Provides Al-generated narratives that explain the risks or implications of a given workflow\n\nchange. Questions like \"What could go wrong if we remove the approval step?\" or \"Is combining steps A\n\nand B safe?\" are answered clearly.\n\nKey Capabilities: The system applies encoded business rules, regulatory constraints, and past error\n\npatterns to simulate possible failure paths. It retrieves and integrates similar historical examples when\n\navailable.\n\nArchitecture:\n\nEncodes domain-specific business rules, regulatory constraints, and known failure cases.\n\nAI simulates potential failure paths and retrieves relevant case studies or logs.\n\nRisk is explained in a human-readable, cause-effect narrative.\n\nOutput: A concise narrative lists potential risks in bullet or paragraph form, along with severity ratings\n\nand possible mitigation strategies. Results are optionally linked to simulation outcomes or archived\n\nevents.\n\nPage 18 of 25\n\nVPBank®\n\nEPIC 5 - Knowledge & Document Support This EPIC connects workflow steps with relevant documents and automates the generation of SOPs\n\n(Standard Operating Procedures) in multiple languages, ensuring that all process knowledge is\n\nconsistently accessible and up-to-date.\n\n5.1 Link to SOP / Forms / Templates\n\nPurpose: Each workflow step can be connected to relevant internal documentation - such as SOP\n\nmanuals, forms, or shared cloud folders (e.g., Google Drive, SharePoint).\n\nKey Capabilities: Users can attach or view files directly from the UI at the task level. Both static URLs\n\nand dynamic cloud integrations are supported, with permission-based access for viewing, downloading,\n\nor editing files depending on user role.\n\nArchitecture: Each task node includes a linked_docs metadata field that connects to external document\n\nmanagement APIs.\n\nOutput: Documents appear as embedded icons or preview panels within the diagram. Users can open\n\nfiles in a new tab or inline viewer.\n\n5.2 Auto SOP Generator\n\nPurpose: Automatically creates a structured Standard Operating Procedure document derived from the\n\nvisual workflow.\n\nKey Capabilities:\n\nAI parses diagram into a sequence of:\n\nHeading: Task name\n\nAction: Purpose of what to do\n\nActor: Who performs the task\n\nRule: Conditions, dependencies, or SLA\n\nOptional export as DOCX, PDF, or Markdown.\n\nArchitecture: Workflow JSON is fed into a prompt template tailored for SOP generation. The LLM\n\nproduces the SOP content, which is then formatted into exportable documents using a formatter module.\n\nOutput: A ready-to-use SOP document aligned with the workflow, suitable for internal distribution, audits,\n\nor compliance use.\n\n5.3 Multi-language Support\n\nPurpose: Support SOP generation in multiple languages, with a focus on: Page 19 of 25\n\nVPBank®\n\nVietnamese (formal tone for government/internal use)\n\nEnglish (reporting or documentation with partners)\n\nKey Capabilities: A language switcher allows users to toggle between SOP languages. Both Al-\n\ngenerated and static text (headings, labels) are translated. Tone can be controlled to match use cases\n\n- such as formal, simplified, or business-style.\n\nArchitecture: A multilingual LLM (e.g., GPT-4 Turbo or NLLB-200) performs translation and tone\n\nadjustment. Both language versions can be stored in parallel with version synchronization.\n\nOutput: SOPs are available in the selected language, with the option to download or view bilingual\n\nversions side-by-side for easier communication or compliance reporting.\n\nEPIC 6 - Feedback & Improvement Loop This EPIC introduces mechanisms to continuously refine workflows through expert-driven feedback,\n\ncrowdsourced insight on pain points, and controlled updates.\n\n6.1 Receive User Feedback\n\nPurpose: Allows experienced users (e.g., bankers or operators) to submit feedback on steps that may\n\nbe outdated, incorrect, missing context, or causing delays.\n\nKey Capabilities: An inline feedback form is embedded in each annual section of the workflow,\n\nsupporting both anonymous and named submissions. Users can tag their feedback with predefined labels\n\nsuch as \"Confusing\", \"Too slow\", or \"Needs update\" for quicker triage and categorization.\n\nArchitecture: Each feedback entry is associated with the relevant task ID and stores metadata including\n\nuser identity (if available) and timestamp. Feedback is aggregated in a centralized admin dashboard to\n\nstreamline triage and prioritization.\n\nOutput: Admins receive a compiled list of feedback items per task, along with a heatmap visualization\n\nthat highlights workflow steps receiving frequent concern or critique.\n\n6.2 Crowd-vote Pain Point\n\nPurpose: Let employees vote on steps they frequently encounter problems with - creating a community-\n\ndriven heatmap of pain points.\n\nKey Capabilities: Each node in the workflow diagram includes an upvote button labeled \"This step often\n\ncauses issues\". Votes are tallied and visualized directly on the diagram through overlays (e.g., color\n\ngradients or emojis). Users can filter voting data by department, role, or specific time periods to identify\n\ncontextual bottlenecks. Page 20 of 25\n\nVPBank®\n\nArchitecture:\n\nPer-node voting registry (unique per user per version)\n\nVisualization overlay on diagram (e.g., color gradient or emoji)\n\nOutput:\n\nReal-time crowd rating on workflow pain points\n\nCan be exported to reports for process improvement meetings\n\n6.3 Edit Workflow from Community Feedback\n\nPurpose: Admins or workflow owners can review and apply changes based on community feedback or\n\nvote trends on pain points.\n\nKey Capabilities: A dedicated feedback dashboard lets authorized users sort and filter submissions by\n\nmost-voted, recently-submitted, or department-specific trends. Suggested edits may include adding a\n\nnew step, adjusting estimated durations, or reassigning actors. All changes are subject to approval\n\nworkflows, ensuring only designated roles (e.g., managers, QA leads) can finalize and publish\n\nmodifications.\n\nArchitecture:\n\nFeedback linked to proposed patch (structured diff)\n\nIntegrated with version control (see EPIC 1.3)\n\nOutput:\n\nUpdated diagram version\n\nChange log showing feedback approval deployment edit\n\nEPIC 7 — Access Control & Role-Based View This EPIC ensures that users only see, edit, and interact with workflow elements relevant to their roles\n\nand responsibilities - promoting compliance, simplicity, and data protection.\n\n7.1 Role-Based Diagram Filtering\n\nPurpose: Users can view only the workflow steps relevant to their role (e.g., employee, manager,\n\ncompliance officer).\n\nKey Capabilities: The system filters workflow diagrams dynamically based on actor-role mappings and\n\nvisibility settings (e.g., public, internal, or private steps). Authorized roles such as managers can\n\noptionally toggle between full-view and role-filtered view for broader context when needed. Page 21 of 25\n\nVPBank®\n\nArchitecture: User role information is retrieved from integrated identity management systems (SSO/IAM),\n\nand the rendering engine conditionally hides irrelevant lanes or nodes at runtime.\n\nOutput: A simplified, role-specific diagram improves focus, reduces visual clutter, and enhances usability\n\nacross large, multi-actor processes.\n\n7.2 Edit Permissions by Role\n\nPurpose: Only authorized roles (e.g., Process Owners, QA Leads) are allowed to edit workflows.\n\nKey Capabilities:\n\nRole levels include:\n\nViewer (read-only access)\n\nEditor (can suggest or apply changes)\n\nApprover (can publish and lock versions)\n\nUI dynamically enables/disables edit options based on permissions\n\nArchitecture: An RBAC (Role-Based Access Control) framework governs all permissions, with every\n\nuser action logged via audit hooks to ensure traceability.\n\nOutput: A tightly controlled editing environment enhances security, accountability, and version integrity.\n\n7.3 Audit Trail\n\nPurpose: Maintain a complete and searchable history of all workflow modifications - detailing what was\n\nchanged, when, by whom, and why.\n\nKey Capabilities: Every action - including create, update, delete, or comment - is captured with full\n\nmetadata. Users can optionally provide reasons for structural edits. The audit log supports filters by user,\n\ndate, or action type to streamline investigations or reviews.\n\nArchitecture: The system writes to an append-only changelog tied to version identifiers, with export\n\noptions for compliance or integration with external audit/reporting systems.\n\nOutput: An audit dashboard provides administrators and compliance officers with a transparent, filterable\n\nactivity feed, enabling detailed change tracking and governance assurance.\n\nPage 22 of 25\n\nVPBank®\n\nArchitecture of Solution\n\nAWS Cloud Corporate data center Processing layer\n\ntrigger /upload\n\nAmazon SageMaker Amazon EventBridge Amazon SageMaker AWS Lambda AWS DataSync Amazon S3 Amazon S3 Batch Transform Endpoint\n\nAmazon SageMaker Workflow generate /retrieval Serving layer Bedrock User Documents AWS Lambda API Gateway AWS Amplify Amazon Neptune Vector Graph\n\nAmazon Bedrock Amazon Bedrock Amazon SageMaker Amazon SageMaker Enhance Suggestion ChatBot Diagram generation Agent Orchestration\n\n/diagram Amazon DynamoDB Amazon SageMaker Table Diagrams Painpoint Detection AWS Lambda\n\nAmazon DynamoDB Table Feedbacks /feedback\n\nAmazon SageMaker AWS Lambda Reinforce Learning\n\nImage 2: The architecture of our solution\n\nOur solution utilizes a robust combination of AWS services across processing, serving, and feedback\n\nlearning layers to provide a seamless, scalable, and intelligent document processing pipeline. This\n\narchitecture is designed to integrate document upload, Al-powered processing, vector-based retrieval,\n\ndiagram generation, and reinforcement learning for feedback improvement. Here's how we effectively\n\nuse and combine AWS services to achieve this:\n\n/diagram, and /feedback) that serve as entry points for various user actions. These endpoints orchestrate\n\nservice invocation using AWS Lambda functions.\n\n1. Frontend Interface and API Integration\n\nAWS Amplify hosts the frontend application, providing users with a secure and responsive interface to\n\ninteract with the system. Amplify integrates directly with API Gateway, allowing RESTful communication\n\nto backend services.\n\nAmazon API Gateway exposes multiple endpoints (/upload, /retrieval, ensuring a scalable and\n\nserverless backend.\n\nPage 23 of 25\n\nVPBank®\n\n2. Document Upload and Processing (Processing Layer)\n\nWhen a user uploads a document (/upload), an AWS Lambda function handles the request and stores\n\nthe file in Amazon S3.\n\nAn Amazon EventBridge rule monitors this S3 bucket and triggers the processing pipeline.\n\nThe uploaded document is first passed through:\n\nAmazon SageMaker Endpoint for real-time predictions or quick metadata extraction.\n\nAmazon SageMaker Batch Transform for large-scale or batch processing of document content.\n\nThe output is stored back into Amazon S3, from where AWS DataSync transfers it to an on-premises\n\ncorporate data center if needed.\n\nThis tightly coupled flow ensures automation, scalability, and near real-time availability of processed\n\ndocuments.\n\n3. Semantic Retrieval and Vector Search\n\nUpon a retrieval request (/retrieval), the corresponding Lambda function queries Amazon\n\nNeptune, which is used to manage both graph-based relationships and vector similarity\n\nsearch between documents and concepts.\n\nThis integration allows for more intelligent retrieval based on context, similarity, and entity\n\nrelationships-an essential part of our knowledge graph implementation.\n\n4. Intelligent Diagram Generation and AI Orchestration (Serving Layer)\n\nFor requests to generate diagrams (/diagram), a Lambda function fetches diagram data from Amazon\n\nDynamoDB, which stores metadata and previously generated diagrams.\n\nAmazon SageMaker Diagram Generation processes this data to create visual representations,\n\npowered by trained ML models.\n\nThese diagram insights are fed into Amazon SageMaker Agent Orchestration, which coordinates\n\nmultiple SageMaker tasks including:\n\nPainpoint Detection (e.g., identifying potential data issues or missing insights),\n\nInterfacing with Amazon Bedrock components such as:\n\nBedrock lightRAG-ChatBot - Provides conversational explanations with Retrieval\n\nAugmented Generation for accurate result.\n\nPage 24 of 25\n\nVPBank®\n\nBedrock Enhance Suggestion - Offers improvement suggestions based on document\n\nstructure and content.\n\nThis seamless combination of vector search, generation models, and LLMs ensures rich and context-\n\naware outputs for end users.\n\n5. Feedback Loop and Reinforcement Learning\n\nUsers (e.g., Banker, Diagram expert) can submit feedback on suggestions or diagram quality via the\n\n/feedback endpoint.\n\nThis data is written to Amazon DynamoDB (Table Feedbacks) and then processed by Amazon\n\nSageMaker Reinforcement Learning, which retrains or fine-tunes models to improve future responses.\n\nThis loop makes the system self-improving, adapting to user preferences and enhancing model\n\nperformance over time.\n\n6. End-to-End Seamless Integration\n\nOur architecture is carefully crafted to ensure tight integration across components:\n\nEvent-driven orchestration (EventBridge + Lambda) ensures real-time responsiveness.\n\nData-centric services (S3, DynamoDB, Neptune) serve as persistent and efficient stores.\n\nAI/ML integration (SageMaker + Bedrock) brings intelligence to processing, generation, and\n\nfeedback.\n\nCloud-to-on-prem connectivity via DataSync supports hybrid workflows with corporate data\n\ncenters.\n\nEach AWS service plays a specific role, but they're connected in a way that enables automatic\n\ntransitions, minimal latency, and Al-augmented intelligence across the entire document lifecycle.\n\nConclusion\n\nThis solution is not just a set of AWS services-it's a well-orchestrated, intelligent system where each\n\ncomponent enhances the Key Capabilities of the other. By using serverless functions, managed AI\n\nservices, vector databases, and feedback loops, we provide a responsive, scalable, and continuously\n\nimproving platform for enterprise-grade document analysis and enhancement.\n\nPage 25 of 25\n\n## Extracted Key-Value Pairs (Forms)\n\n| Key | Value |\n| --- | --- |\n| Email Address |  |\n| Page | 1 of 25 |\n| Team Name | Nhóm 247 (Update to SoftAI) |\n| Hack Challenge 4: | Al-Powered Banking Process Redesign |\n| powered by | aws |\n| Page | 2 of 25 |\n| Impact of Solution | 6 |\n| Addition Resources | 3 |\n| Solutions Introduction | 4 |\n| Deep Dive into Solution | 11 |\n| Architecture of Solution | 23 |\n| [2]. VPFlow - Figma: | VPFlow Figma Link |\n| Page | 3 of 25 |\n| [1]. VPFlow - Figma prototype demonstratation video: | https://youtu.be/hY JsGxNuel |\n| Bottleneck detection & AI suggestions: | System identifies pain points based on user feedback, time metadata, and process logic. GenAl offers improvement recommendations instantly. |\n| Our Mission: |  |\n| Powered by AWS: | With AWS Textract, SageMaker, Lambda, Neptune |\n| What is VPFlow? | VPFlow is an Al-powered, centralized platform built to help banks - especially in complex environments like VPBank - to comprehend, visualize, optimize, and continuously improve workflows. Instead of static flowcharts and disconnected SOP files, VPFlow turns our internal into interactive, intelligent diagrams, which we call Dynamic Swimlane diagram (footnote). |\n| From SOPs to diagrams: | VPFlow auto-generates swimlane diagrams from unstructured documents, SOPs, and process narratives using fine-tuned LLMs (e.g., Deekseek R1). |\n| Real-time interaction: | Each diagram node is clickable and explorable. Users can ask questions about each step and receive natural language explanations via AI agent. Interactive agent tools that enable users to engage directly with workflows via an intuitive graphical user interface |\n| Knowledge-rich database: | By integrating knowledge graphs with vector embeddings, the platform constructs a dynamic, LLM-ready context layer - enabling deep understanding of each workflow component. |\n| Page | 4 of 25 |\n| Continuous learning: | User feedback feeds into SageMaker's reinforcement learning loop, allowing the system to adapt and improve optimization suggestions over time. |\n| Semantic workflow intelligence: | Amazon Neptune fuses graph relationships and vector embeddings to enable business-aware search and logic validation across processes. |\n| AI model orchestration: | SageMaker and Bedrock power the extraction of workflows from unstructured documents, bottleneck detection, and contextual responses using LLMs. |\n| Experts/Process |  |\n| Bankers: | visually, ask questions in plain language, and |\n| Secure and compliant: | IAM, KMS, and CloudTrail ensure strict access control, encryption, and auditability - essential for financial-grade compliance. |\n| Serverless & real-time: | AWS Lambda and EventBridge handle SOP ingestion, diagram generation, and user interaction in real time - without infrastructure overhead. |\n| Page | 5 of 25 |\n| For Better Comprehend, please watch the demonstration: | https://youtu.be/hY JsGxNuel |\n| Flexible integration: | Services like S3, DynamoDB, and DataSync support hybrid deployments and easy integration with core banking systems. |\n| 1. Redefining Internal Operational Capabilities in Modern Banking |  |\n| The | Bedrock/SageMaker: Neptune/DynamoDB: |\n| Our solution is not only designed for current operations but also serves as an infrastructure for the future of digital banking, enabling: | Neo-banking capabilities, where each process step can self-analyze, flag anomalies, and support FinTech onboarding, identity verification, and anti-fraud operations. Live compliance monitoring systems, capable of real-time process control and auto-generating audit logs. RPA 2.0, where repetitive tasks are automatically identified and proposed for automation without the need for coding. |\n| Page | 6 of 25 |\n| 3. Core Technological and Functional Differentiation |  |\n| 2. Existing Tools are \"Isolated\" - Our Solution is an \"Ecosystem\" |  |\n| 1. Aligned with the Practical Needs of the Vietnamese Banking Sector | Operational bottlenecks (e.g., delayed CIC checks, internal handovers, CRM input errors) are not systematically tracked or proactively flagged. Process updates and improvement proposals are typically manual and lack tools for simulation or performance assessment prior to implementation. These issues cannot be effectively addressed using existing tools such as Microsoft Visio, Lucidchart, or |\n| Our solution leverages Generative AI (GenAl) to analyze SOPs, operational guidelines, and user feedback to: | Auto-generate swimlane process diagrams instead of relying on manual diagramming. Detect logical errors such as missing handlers, infinite loops, or ambiguous conditions. |\n| Why our solution is a good solution? How is it better than existing solutions in the market / competitors? | Because it goes beyond the limitations of |\n| Page | 7 of 25 |\n| Page | 8 of 25 |\n| No |  |\n| No |  |\n| No |  |\n| No |  |\n| No |  |\n| 3. | - detecting design flaws (e.g., missing handlers, infinite loops). based on metadata, time duration, and user interactions. |\n| our system enables: | Interacting at each process point - users can access documents or directly ask questions via AI assistant. |\n| Our solution's competitive advantage / unique selling point? | A \"living command center\" for banks - |\n| 2. Al-Powered Logic Analysis Unlike current static diagrams, | Capturing in-process feedback from frontline staff - no more scattered suggestions lost in email threads. As a result, the process map becomes a smart operational blueprint that can learn and self-improve over |\n| 1. Auto-generation of Process Maps from Unstructured Text - No Drawing or Configuration Required | Current tools like Visio, Lucidchart, or Camunda require users to have domain knowledge and manually draw process diagrams. This is time-consuming, not scalable across staff, and prone to inconsistencies. Our solution: Takes input as SOPs, internal guidelines, or PDF documents. Uses GenAl to automatically identify roles, flows, conditions, and related documentation. Generates interactive swimlane diagrams - transforming static documents into living data. This reduces process mapping time by up to 80% and democratizes process understanding for non- technical staff. |\n| Page | 9 of 25 |\n| We integrate simulation capabilities to: |  |\n| In |  |\n| Page | 10 of 25 |\n| However, the platform is fully extensible to: | Insurance (claims, verification) FinTech (onboarding, fraud detection) Large enterprises (HR workflows, internal control) |\n| Our features are designed specifically for banking use cases, including: | Credit underwriting eKYC and CRM workflows Customer complaints and account opening |\n| Expert |  |\n| Write |  |\n| Feedback |  |\n| Banker |  |\n| Document Store Database |  |\n| Purpose: | Users can upload a new workflow document or search existing workflows using business- related keywords in natural language across multiple languages. |\n| Key Capabilities: |  |\n| Image 1: | VPFlow - High Level Data Flow Diagram |\n| Call |  |\n| Render | Database |\n| Page | 11 of 25 |\n| 1.1 Upload / Search Workflow | Supports semantic keyword search using vector embeddings (e.g., pgvector, FAISS), allowing for free-text input with multilingual normalization, including diacritic removal, slang |\n| Workflow Reposity |  |\n| Save | Link |\n| Modified Textract |  |\n| Key Capabilities: |  |\n| And LLM-based entity extraction to identify multilingual elements | such as steps, actors, conditions, and references. |\n| Page | 12 of 25 |\n| Architecture: | Text is embedded using a multilingual language model (BGE-M3), if Vietnamese detected ViDense will be used for State-of-the-art performance. Indexing engine supports both full-text and semantic queries. Optional tag-based filtering by department, role, or last modified date. |\n| Output: | Delivers a ranked list of relevant workflows, with options to preview summaries or open full visualizations (linked to EPIC 2.1). |\n| Output: | A structured, editable JSON file representing the workflow, with the option to review and confirm before visualization. |\n| Architecture: | Document Preprocessing Chunking Prompt-based multilingual extraction Post- processing JSON schema validation. Uses prompt templates trained on domain-specific language (e.g., enterprise SOPs, regulatory documents across supported languages). |\n| Each task or node in the diagram is interactive. Clicking on it reveals: |  |\n| Purpose: | Enables comprehensive version management for workflows-users can track changes, previous versions, or compare edits over time with full traceability. |\n| Architecture: | JSON AST Renderer engine (Mermaid parser or D3-based DSL). Diagram components are clickable (linked to EPIC 2.2). |\n| Page | 13 of 25 |\n| Responsible actor(s): | Example |\n| Key Capabilities: | Each workflow change auto-generates a version ID, and a Git-like diff engine highlights differences in diagram structure. Annotations can include who made changes, when, and why (if enabled via comments). |\n| Output: | An intuitive version timeline panel, with tools to compare, revert, or audit changes, supporting full accountability and rollback functionality. |\n| Output: | A responsive swimlane diagram with visual actor separation and structural clarity, ready for analysis and interaction. |\n| Purpose: | Renders each workflow as an interactive swimlane diagram, organizing tasks by actors/roles (e.g., customer, staff, supervisor). |\n| EPIC 2 - Workflow Visualization | This EPIC provides an interactive, user-friendly interface to visualize, interact with, and analyze business workflows. The focus is on clarity (via swimlanes), interactivity (node insights), and optimization (pain point detection). |\n| Architecture: | Workflows stored in JSON format with hashed version IDs. Delta storage or full snapshot depending on change granularity. Timeline UI to navigate and visualize previous versions. |\n| Key Capabilities: Diagram engine (e.g., Mermaid.js, D3.js, or custom Canvas) supports: | Lane separation by actor Sequential and parallel flows Gateways (if/else) Real-time updates when workflow JSON is modified. |\n| Purpose: |  |\n| Key Capabilities: | Step duration x number of dependencies x actor transitions |\n| Key Capabilities: | \"Explain why this step is problematic.\" |\n| Purpose: | Take excessive time. Involve multiple handoffs or actors. |\n| Page | 14 of 25 |\n| Architecture: | Node registry with event listeners. Contextual panel rendered on click. |\n| Architecture: | Pain scores are computed in a preprocessing stage and visualized using threshold-based color cues (e.g., red glow, warning icons). |\n| Key Capabilities: | Tooltip + side panel on click. Rich metadata display from workflow JSON. Support for role-based access (e.g., editors see edit button, viewers see only details). |\n| Output: | A dynamic side panel showing detailed task metadata, with navigation support between connected steps. |\n| Output: | An annotated diagram highlighting pain points. Hovering over a node reveals a quick explanation and score. |\n| Purpose: | AI explains why a step is marked as a pain point and optionally suggests ways to improve it. |\n| Pain point scoring algorithm: | Optionally incorporates execution logs or heuristics Visual cue (e.g., red outline or glow) on affected node(s) |\n| Uses LLM with custom prompt template: | \"Why is this handoff causing issues?\" \"How can we improve this part of the process?\" |\n| Automatically scans the workflow and highlights pain points, which are steps that: | Frequently cause delays, confusion, or rework. |\n| Key Capabilities: | Converts swimlane structure into a knowledge graph (actors, steps, |\n| Purpose: | Empowers users to ask high-level, natural-language questions about the entire workflow diagram - such as \"Which step is the most complex?\", \"What documents or forms are needed?\", or \"Is this process logical and efficient?\" |\n| Page | 15 of 25 |\n| Purpose: | Users can select a specific step (node) and ask targeted questions about that task's context, conditions, and responsibilities. |\n| Examples: |  |\n| Output: | Natural language explanation (e.g., \"This step involves 3 departments and lacks automation\"). Optional links to AI suggestions (integrated with EPIC 3.4). |\n| Output: | Users receive actionable insights across the entire workflow, often with clickable suggestions or links to deeper drill-downs. |\n| EPIC 3 — GenAl-powered Analysis & Assistant | This EPIC leverages Generative AI to analyze workflows at multiple levels - from high-level assessments to step-specific insights - enabling users to understand, validate, and improve complex processes through natural language interaction. |\n| Architecture: | Node metadata and flow context are sent to a templated prompt, and results are rendered inline via tooltip or collapsible panel. |\n| Architecture: | Swimlane JSON Knowledge Graph (nodes, actors, relations) Query Parser Prompt Generator with injected metadata RAG pipeline: vector search on past data LLM synthesis (e.g., GPT-4, Claude) Frontend shows annotated results with highlight overlays |\n| Page | 16 of 25 |\n| Key Capabilities: | Generates dynamic prompts based on the selected node's metadata - including connected steps, roles, conditions, and historical execution data. Answers are focused and informative. |\n| Output: | Clear, targeted responses related to the chosen step, with options to explore deeper or simulate changes. |\n| Purpose: | The AI recommends structural improvements to optimize efficiency - for instance by merging redundant steps, parallelizing independent paths, or balancing workloads across actors. |\n| Architecture: | Node selection triggers metadata extraction (actor, conditions, in/out edges) Prompt template filled dynamically with node-local context Optional RAG augmentation using internal process logs UI renders answers in a collapsible side panel |\n| Architecture: | Workflow JSON DAG conversion Rule engine checks for graph violations and anti-patterns Findings passed through explanation prompt LLM output Frontend highlights faulty nodes with tooltips and fix suggestions |\n| 3.4 Suggest redesign |  |\n| Purpose: The system automatically scans the diagram to identify structural or logical issues, such as: | Tasks without assigned actors Gateways missing conditions Infinite or invalid loops Disconnected or redundant nodes |\n| Output: | Combined visual/textual error reports, with friendly explanations and fix recommendations. Admins can preview or auto-apply corrections. |\n| Key Capabilities: | Converts workflows into DAGs (Directed Acyclic Graphs) for rule-based static analysis. Uses LLM to explain detected issues in plain, accessible language and marks them visually. |\n| Purpose: | Enables users to simulate hypothetical edits to the workflow - such as removing a step, reassigning responsibilities, adding delays, or introducing automation - and immediately observe downstream effects. |\n| EPIC 4 - Simulation & Optimization |  |\n| Architecture: | Converts dynamic swimlane into an executable simulation graph with annotations for time, cost, and resources. Uses probabilistic simulations (e.g., Monte Carlo) or rule-based logic propagation to model the outcome of edits. |\n| Key Capabilities: | Each simulation estimates how proposed changes affect overall process performance: including total execution time, actor workload distribution, and potential logic issues or risk exposure. The system presents results in intuitive graphs and summaries. |\n| Page | 17 of 25 |\n| Architecture: | Baseline workflow JSON transformation engine applies optimizations Comparison module parses ASTs of both versions Prompts generated to summarize improvements and trade-offs Frontend shows side-by-side diagrams + natural language summary |\n| Key Capabilities: | Applies transformation rules (e.g., merge sequential tasks, parallelize paths, balance workload) Leverages logs and organizational best practices Uses LLM to explain before/after changes |\n| Output: | An improved version of the workflow, complete with AI commentary, visual diff view, and the ability to accept, reject, or edit proposed changes. |\n| Output: | Users receive dynamic charts and summaries quantifying changes in KPIs, such as \"+2 hours, |\n| AI verdict: is the new version better? Why? |  |\n| Key Capabilities: | The system applies encoded business rules, regulatory constraints, and past error patterns to simulate possible failure paths. It retrieves and integrates similar historical examples when available. |\n| Purpose: | Provides Al-generated narratives that explain the risks or implications of a given workflow change. Questions like \"What could go wrong if we remove the approval step?\" or \"Is combining steps A and B safe?\" are answered clearly. |\n| Purpose: | After a simulation or Al-driven redesign, the system compares two process versions side-by- side: Structural differences (nodes, branches, loops). KPI metrics (time, task count, complexity, actor distribution). |\n| Output: | A concise narrative lists potential risks in bullet or paragraph form, along with severity ratings and possible mitigation strategies. Results are optionally linked to simulation outcomes or archived events. |\n| Architecture: | Parses two dynamic swimlane versions into abstract syntax trees (ASTs). Compares control flow, actor involvement, and estimated metrics. AI uses prompt templates to summarize deltas and justify conclusions. |\n| Page | 18 of 25 |\n| Key Capabilities: | The comparison highlights structural differences (nodes added/removed, logic branches changed), along with metrics like task duration, actor complexity, and workload balance. AI evaluates whether the redesigned version is more optimal and explains why. |\n| Output: | An interactive diff view with color-coded diagram changes, a breakdown of metric deltas in tables, Al-generated explanation stating whether - and why - the new process is better. |\n| Architecture: | Encodes domain-specific business rules, regulatory constraints, and known failure cases. AI simulates potential failure paths and retrieves relevant case studies or logs. Risk is explained in a human-readable, cause-effect narrative. |\n| EPIC 5 - Knowledge & Document Support |  |\n| Purpose: | Each workflow step can be connected to relevant internal documentation - such as SOP manuals, forms, or shared cloud folders (e.g., Google Drive, SharePoint). |\n| Actor: | Who performs the task |\n| Purpose: | Support SOP generation in multiple languages, with a focus on: |\n| Key Capabilities: | Users can attach or view files directly from the UI at the task level. Both static URLs and dynamic cloud integrations are supported, with permission-based access for viewing, downloading, or editing files depending on user role. |\n| Architecture: | Each task node includes a linked_docs metadata field that connects to external document management APIs. |\n| Output: | Documents appear as embedded icons or preview panels within the diagram. Users can open files in a new tab or inline viewer. |\n| Purpose: | Automatically creates a structured Standard Operating Procedure document derived from the visual workflow. |\n| Heading: | Task name |\n| Action: | Purpose of what to do |\n| Rule: | Conditions, dependencies, or SLA |\n| Architecture: | Workflow JSON is fed into a prompt template tailored for SOP generation. The LLM produces the SOP content, which is then formatted into exportable documents using a formatter module. |\n| Page | 19 of 25 |\n| Output: | A ready-to-use SOP document aligned with the workflow, suitable for internal distribution, audits, or compliance use. |\n| 5.3 Multi-language Support |  |\n| Architecture: |  |\n| Output: | compiled list of feedback items receiving frequent concern |\n| Purpose: | Allows experienced users (e.g., bankers or operators) to submit feedback on steps that may be outdated, incorrect, missing context, or causing delays. |\n| Architecture: | A multilingual LLM (e.g., GPT-4 Turbo or NLLB-200) performs translation and tone adjustment. Both language versions can be stored in parallel with version synchronization. |\n| Key Capabilities: | A language switcher allows users to toggle between SOP languages. Both Al- generated and static text (headings, labels) are translated. Tone can be controlled to match use cases - such as formal, simplified, or business-style. |\n| Output: | SOPs are available in the selected language, with the option to download or view bilingual versions side-by-side for easier communication or compliance reporting. |\n| Purpose: | Let employees vote on steps they frequently encounter problems with - creating a community- driven heatmap of pain points. |\n| EPIC 6 - Feedback & Improvement Loop | This EPIC introduces mechanisms to continuously refine workflows through expert-driven feedback, crowdsourced insight on pain points, and controlled updates. |\n| Page | 20 of 25 |\n| Key Capabilities: | Each node in the workflow diagram includes an upvote button labeled \"This step often causes issues\". Votes are tallied and visualized directly on the diagram through overlays (e.g., color gradients or emojis). Users can filter voting data by department, role, or specific time periods to identify contextual bottlenecks. |\n| Purpose: | Users can view only the workflow steps relevant to their role (e.g., employee, manager, compliance officer). |\n| Key Capabilities: | A dedicated feedback dashboard lets authorized users sort and filter submissions by most-voted, recently-submitted, or department-specific trends. Suggested edits may include adding a new step, adjusting estimated durations, or reassigning actors. All changes are subject to approval workflows, ensuring only designated roles (e.g., managers, QA leads) can finalize and publish modifications. |\n| Page | 21 of 25 |\n| Output: | Real-time crowd rating on workflow pain points Can be exported to reports for process improvement meetings |\n| Architecture: | Per-node voting registry (unique per user per version) Visualization overlay on diagram (e.g., color gradient or emoji) |\n| Output: | Updated diagram version Change log showing feedback edit approval deployment |\n| Key Capabilities: | The system filters workflow diagrams dynamically based on actor-role mappings and visibility settings (e.g., public, internal, or private steps). Authorized roles such as managers can optionally toggle between full-view and role-filtered view for broader context when needed. |\n| Purpose: | Admins or workflow owners can review and apply changes based on community feedback or vote trends on pain points. |\n| EPIC 7 — Access Control & Role-Based View | This EPIC ensures that users only see, edit, and interact with workflow elements relevant to their roles and responsibilities - promoting compliance, simplicity, and data protection. |\n| Architecture: | Feedback linked to proposed patch (structured diff) Integrated with version control (see EPIC 1.3) |\n| UI dynamically enables/disables edit options based on permissions | X |\n| Key Capabilities: | Every action - including create, update, delete, or comment - is captured with full metadata. Users can optionally provide reasons for structural edits. The audit log supports filters by user, date, or action type to streamline investigations or reviews. |\n| Purpose: | Only authorized roles (e.g., Process Owners, QA Leads) are allowed to edit workflows. |\n| Page | 22 of 25 |\n| Output: | A simplified, role-specific diagram improves focus, reduces visual clutter, and enhances usability across large, multi-actor processes. |\n| Output: | A tightly controlled editing environment enhances security, accountability, and version integrity. |\n| Architecture: | An RBAC (Role-Based Access Control) framework governs all permissions, with every user action logged via audit hooks to ensure traceability. |\n| Architecture: | User role information is retrieved from integrated identity management systems (SSO/IAM), and the rendering engine conditionally hides irrelevant lanes or nodes at runtime. |\n| Output: | An audit dashboard provides administrators and compliance officers with a transparent, filterable activity feed, enabling detailed change tracking and governance assurance. |\n| Purpose: | Maintain a complete and searchable history of all workflow modifications - detailing what was changed, when, by whom, and why. |\n| Architecture: | The system writes to an append-only changelog tied to version identifiers, with export options for compliance or integration with external audit/reporting systems. |\n| Viewer (read-only access) |  |\n| Editor (can suggest or apply changes) |  |\n| Approver (can publish and lock versions) |  |\n| User |  |\n| Page | 23 of 25 |\n| 1. Frontend Interface and API Integration | AWS Amplify hosts the frontend application, providing users with a secure and responsive interface to interact with the system. Amplify integrates directly with API Gateway, allowing RESTful communication to backend services. Amazon API Gateway exposes multiple endpoints (/upload, /retrieval, ensuring a scalable and serverless backend. |\n| Image 2: | The architecture of our solution |\n| Corporate | data center |\n| Amazon SageMaker Endpoint for real-time predictions or quick metadata extraction. |  |\n| Painpoint Detection (e.g., identifying potential data issues or missing insights), |  |\n| Interfacing with Amazon Bedrock components such as: |  |\n| 3. Semantic Retrieval and Vector Search | Upon a retrieval request (/retrieval), the corresponding Lambda function queries Amazon Neptune, which is used to manage both graph-based relationships and vector similarity search between documents and concepts. This integration allows for more intelligent retrieval based on context, similarity, and entity relationships-an essential part of our knowledge graph implementation. |\n| Page | 24 of 25 |\n| 4. Intelligent Diagram Generation and AI Orchestration (Serving Layer) | For requests to generate diagrams (/diagram), a Lambda function fetches diagram data from Amazon DynamoDB, which stores metadata and previously generated diagrams. Amazon SageMaker Diagram Generation processes this data to create visual representations, powered by trained ML models. These diagram insights are fed into Amazon SageMaker Agent Orchestration, which coordinates multiple SageMaker tasks including: Bedrock lightRAG-ChatBot - Provides conversational explanations with Retrieval Augmented Generation for accurate result. |\n| Amazon SageMaker Batch Transform for large-scale or batch processing of document content. |  |\n| Conclusion | This solution is not just a set of AWS services-it's a well-orchestrated, component enhances the Key Capabilities of the other. By services, vector databases, and feedback loops, we provide a |\n| 6. End-to-End Seamless Integration | Our architecture is carefully crafted to ensure tight integration across components: Event-driven orchestration (EventBridge + Lambda) ensures real-time responsiveness. Data-centric services (S3, DynamoDB, Neptune) serve as persistent and efficient stores. AI/ML integration (SageMaker + Bedrock) brings intelligence to processing, generation, feedback. Cloud-to-on-prem connectivity via DataSync supports hybrid workflows with corporate |\n| Page | 25 of 25 |\n| 5. Feedback Loop and Reinforcement Learning | Users (e.g., Banker, Diagram expert) can submit feedback on suggestions or diagram quality via the /feedback endpoint. This data is written to Amazon DynamoDB (Table Feedbacks) and then processed by Amazon SageMaker Reinforcement Learning, which retrains or fine-tunes models to improve future responses. This loop makes the system self-improving, adapting to user preferences and enhancing model performance over time. |\n\n## Table 1\n\n<table><tr><td>Challenge Statement</td><td>Hack Challenge 4: Al-Powered Banking Process Redesign</td></tr><tr><td>Team Name</td><td>Nhóm 247 (Update to SoftAI)</td></tr></table>\n\n## Table 2\n\n<table><tr><td>Full Name</td><td>Role</td><td>Email Address</td><td>School Name (if applicable)</td><td>Faculty / Area of Study</td><td>Linkedln Profile URL</td></tr><tr><td>Nguyên Vãn Tú</td><td>Team lead + AI dev</td><td>nvantu2305@gmail. com</td><td>University of Science, VNUHCM</td><td>Information Technology</td><td>https://www.linkedin.com/i n/nguyen-van-tu/</td></tr><tr><td>Duong Trung Nghîa</td><td>Backend + AI dev</td><td>trungnghia.24904@ gmail.com</td><td>University of Science, VNUHCM</td><td>Information Technology</td><td>https://www.linkedin.com/i n/nghia-zun/</td></tr><tr><td>Pham Thành Nhân</td><td>Frontend developer</td><td>ptnhanit230104@g mail.com</td><td>University of Science, VNUHCM</td><td>Information Technology</td><td>https://www.linkedin.com/i n/nhan-pham-53a891323/</td></tr><tr><td>Lu'o'ng Xuân Thanh</td><td>DevOps + Architecture Solution</td><td>Ixthanh235@gmail.c om</td><td>University of Science, VNUHCM</td><td>Information Technology</td><td>https://www.linkedin.com/i n/luongthanh/</td></tr><tr><td>Dinh Nguyên Lan Anh</td><td>DA + BA</td><td>anhdnl22@uef.edu. vn</td><td>University of Economics and Finance</td><td>Financial Technology</td><td>https://www.linkedin.com/i n/ddnlanh/</td></tr></table>\n\n## Table 3\n\n<table><tr><td>Section</td><td>Page No.</td></tr><tr><td>Addition Resources</td><td>3</td></tr><tr><td>Solutions Introduction</td><td>4</td></tr><tr><td>Impact of Solution</td><td>6</td></tr><tr><td>Deep Dive into Solution</td><td>11</td></tr><tr><td>Architecture of Solution</td><td>23</td></tr></table>\n\n## Table 4\n\n<table><tr><td>Evaluation Criteria</td><td>Microsoft Visio / Lucidchart</td><td>SAP Signavio / Bizagi</td><td>Proposed Method</td></tr><tr><td>Auto-generation of process diagrams from SOP text</td><td>No</td><td>Yes, with advanced configuration</td><td>Yes, using GenAl</td></tr><tr><td>Logic error detection in process flows</td><td>No</td><td>No</td><td>Yes, Al-powered warnings</td></tr><tr><td>Improvement suggestions based on internal data</td><td>No</td><td>Partial (via expert analysis)</td><td>Yes, using AI and staff feedback</td></tr><tr><td>What-if simulation of process changes</td><td>No</td><td>Yes, but complex and hard to access</td><td>Yes, simplified for business users</td></tr><tr><td>Attachment of documents at each process step</td><td>Manual only, not standardized</td><td>Yes, in enterprise platforms</td><td>Yes, with flexible file/metadata linking</td></tr><tr><td>Suitability for Vietnamese banking operations</td><td>No</td><td>Yes, but expensive and complex to deploy</td><td>Yes, field-tested and lightweight</td></tr></table>\n\n## Table 5\n\n<table><tr><td></td><td>AWS Cloud AWS Amplify API</td><td>/upload trigger AWS Lambda Amazon S3 Amazon EventBridge /retrieval Gateway AWS Lambda Amazon Neptune Vector Graph /diagram Amazon DynamoDB Table Diagrams AWS Lambda Amazon DynamoDB Table Feedbacks /feedback AWS Lambda Amazon SageMaker Reinforce</td><td>Processing layer Amazon SageMaker Amazon SageMaker Endpoint Batch Transform Amazon SageMaker Workflow generate Serving layer Amazon SageMaker Amazon SageMaker Diagram generation Agent Orchestration Amazon SageMaker Painpoint Detection Learning</td><td>Amazon S3 AWS DataSync Bedrock Amazon Bedrock Amazon Bedrock ChatBot Enhance Suggestion</td><td></td><td>Corporate data center Documents</td></tr></table>\n\n"
  }
}